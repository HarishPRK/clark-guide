{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haris\\\\clark-guide\\\\clark-chatbox\\\\frontend\\\\src\\\\contexts\\\\UserContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Define user types\n\n// User interface\n\n// Context interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create context with default values\nconst UserContext = /*#__PURE__*/createContext({\n  user: null,\n  setUser: () => {},\n  isAuthenticated: false,\n  setUserType: () => {},\n  startNewSession: () => {}\n});\n\n// Hook to use the user context\nexport const useUser = () => {\n  _s();\n  return useContext(UserContext);\n};\n\n// Provider component\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n\n  // Generate a random user ID if needed\n  const generateId = () => {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  };\n\n  // Generate a session ID\n  const generateSessionId = () => {\n    return Date.now().toString(36) + Math.random().toString(36).substring(2);\n  };\n\n  // Set user type (student, faculty, other)\n  const setUserType = type => {\n    if (!user) {\n      // Create a new user if none exists\n      setUser({\n        id: generateId(),\n        type,\n        sessionId: generateSessionId()\n      });\n    } else {\n      // Update existing user type\n      setUser({\n        ...user,\n        type,\n        sessionId: user.sessionId || generateSessionId()\n      });\n    }\n  };\n\n  // Start a new chat session\n  const startNewSession = () => {\n    if (user) {\n      setUser({\n        ...user,\n        sessionId: generateSessionId()\n      });\n    }\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = !!user;\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser,\n      isAuthenticated,\n      setUserType,\n      startNewSession\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = UserProvider;\nexport default UserContext;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","UserContext","user","setUser","isAuthenticated","setUserType","startNewSession","useUser","_s","UserProvider","children","_s2","generateId","Math","random","toString","substring","generateSessionId","Date","now","type","id","sessionId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/haris/clark-guide/clark-chatbox/frontend/src/contexts/UserContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode } from 'react';\r\n\r\n// Define user types\r\nexport type UserType = 'student' | 'faculty' | 'other';\r\n\r\n// User interface\r\nexport interface User {\r\n  id: string;\r\n  type: UserType;\r\n  name?: string;\r\n  sessionId?: string;\r\n}\r\n\r\n// Context interface\r\ninterface UserContextType {\r\n  user: User | null;\r\n  setUser: (user: User | null) => void;\r\n  isAuthenticated: boolean;\r\n  setUserType: (type: UserType) => void;\r\n  startNewSession: () => void;\r\n}\r\n\r\n// Create context with default values\r\nconst UserContext = createContext<UserContextType>({\r\n  user: null,\r\n  setUser: () => {},\r\n  isAuthenticated: false,\r\n  setUserType: () => {},\r\n  startNewSession: () => {},\r\n});\r\n\r\n// Hook to use the user context\r\nexport const useUser = () => useContext(UserContext);\r\n\r\n// Provider component\r\nexport const UserProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  // Generate a random user ID if needed\r\n  const generateId = () => {\r\n    return Math.random().toString(36).substring(2, 15) + \r\n           Math.random().toString(36).substring(2, 15);\r\n  };\r\n\r\n  // Generate a session ID\r\n  const generateSessionId = () => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substring(2);\r\n  };\r\n\r\n  // Set user type (student, faculty, other)\r\n  const setUserType = (type: UserType) => {\r\n    if (!user) {\r\n      // Create a new user if none exists\r\n      setUser({\r\n        id: generateId(),\r\n        type,\r\n        sessionId: generateSessionId(),\r\n      });\r\n    } else {\r\n      // Update existing user type\r\n      setUser({\r\n        ...user,\r\n        type,\r\n        sessionId: user.sessionId || generateSessionId(),\r\n      });\r\n    }\r\n  };\r\n\r\n  // Start a new chat session\r\n  const startNewSession = () => {\r\n    if (user) {\r\n      setUser({\r\n        ...user,\r\n        sessionId: generateSessionId(),\r\n      });\r\n    }\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = !!user;\r\n\r\n  return (\r\n    <UserContext.Provider \r\n      value={{ \r\n        user, \r\n        setUser, \r\n        isAuthenticated, \r\n        setUserType, \r\n        startNewSession \r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContext;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAmB,OAAO;;AAE7E;;AAGA;;AAQA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAkB;EACjDM,IAAI,EAAE,IAAI;EACVC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAC;EACjBC,eAAe,EAAE,KAAK;EACtBC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAC;EACrBC,eAAe,EAAEA,CAAA,KAAM,CAAC;AAC1B,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMV,UAAU,CAACG,WAAW,CAAC;AAAA;;AAEpD;AAAAO,EAAA,CAFaD,OAAO;AAGpB,OAAO,MAAME,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/E,MAAM,CAACT,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAc,IAAI,CAAC;;EAEnD;EACA,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvB,OAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAC3CH,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;EACpD,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAOC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACJ,QAAQ,CAAC,EAAE,CAAC,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;EAC1E,CAAC;;EAED;EACA,MAAMX,WAAW,GAAIe,IAAc,IAAK;IACtC,IAAI,CAAClB,IAAI,EAAE;MACT;MACAC,OAAO,CAAC;QACNkB,EAAE,EAAET,UAAU,CAAC,CAAC;QAChBQ,IAAI;QACJE,SAAS,EAAEL,iBAAiB,CAAC;MAC/B,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAd,OAAO,CAAC;QACN,GAAGD,IAAI;QACPkB,IAAI;QACJE,SAAS,EAAEpB,IAAI,CAACoB,SAAS,IAAIL,iBAAiB,CAAC;MACjD,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMX,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIJ,IAAI,EAAE;MACRC,OAAO,CAAC;QACN,GAAGD,IAAI;QACPoB,SAAS,EAAEL,iBAAiB,CAAC;MAC/B,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMb,eAAe,GAAG,CAAC,CAACF,IAAI;EAE9B,oBACEF,OAAA,CAACC,WAAW,CAACsB,QAAQ;IACnBC,KAAK,EAAE;MACLtB,IAAI;MACJC,OAAO;MACPC,eAAe;MACfC,WAAW;MACXC;IACF,CAAE;IAAAI,QAAA,EAEDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,GAAA,CA3DWF,YAA+C;AAAAoB,EAAA,GAA/CpB,YAA+C;AA6D5D,eAAeR,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}