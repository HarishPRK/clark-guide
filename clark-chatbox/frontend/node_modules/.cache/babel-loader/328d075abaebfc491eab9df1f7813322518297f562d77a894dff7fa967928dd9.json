{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haris\\\\clark-guide\\\\clark-chatbox\\\\frontend\\\\src\\\\components\\\\ChatWidget.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Fab, Paper, Typography, TextField, IconButton, Drawer, List, ListItem, Divider, Chip, useTheme, CircularProgress } from '@mui/material';\nimport socketService from '../services/socketService';\nimport CampusHeatmap from './CampusHeatmap';\nimport SendIcon from '@mui/icons-material/Send';\nimport CloseIcon from '@mui/icons-material/Close';\nimport MinimizeIcon from '@mui/icons-material/Minimize';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SchoolIcon from '@mui/icons-material/School';\nimport WorkIcon from '@mui/icons-material/Work';\nimport PersonIcon from '@mui/icons-material/Person';\nimport { useUser } from '../contexts/UserContext';\n\n// URL for Cougar SVG logo\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cougarLogoUrl = \"https://dxbhsrqyrr690.cloudfront.net/sidearm.nextgen.sites/clarku.sidearmsports.com/images/responsive_2023/CU%20Cougar%20on%20White.svg\";\nconst ChatWidget = () => {\n  _s();\n  const theme = useTheme();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSelectingUserType, setIsSelectingUserType] = useState(true);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [connectionError, setConnectionError] = useState(null);\n  const chatBottomRef = useRef(null);\n  const {\n    user,\n    setUserType\n  } = useUser();\n\n  // Campus ambient intelligence features\n  const [showHeatmap, setShowHeatmap] = useState(false);\n  const [heatmapData, setHeatmapData] = useState([]);\n  const ambientInsightTimer = useRef(null);\n\n  // Generate realistic occupancy data based on time of day\n  const getTimeAdjustedOccupancyData = () => {\n    const currentHour = new Date().getHours();\n    const isOffHours = currentHour >= 22 || currentHour < 8; // 10 PM to 8 AM\n    const isLunchTime = currentHour >= 11 && currentHour <= 14; // 11 AM to 2 PM\n    const isDinnerTime = currentHour >= 17 && currentHour <= 20; // 5 PM to 8 PM\n    const isPeakHours = currentHour >= 10 && currentHour <= 16; // 10 AM to 4 PM\n\n    return [{\n      locationId: 'goddard-library',\n      name: 'Goddard Library',\n      occupancy: isOffHours ? 0.05 + Math.random() * 0.1 // 5-15% during off hours\n      : isPeakHours ? 0.7 + Math.random() * 0.15 // 70-85% during peak hours\n      : 0.3 + Math.random() * 0.3 // 30-60% otherwise\n    }, {\n      locationId: 'academic-commons',\n      name: 'Academic Commons',\n      occupancy: isOffHours ? 0.03 + Math.random() * 0.07 // 3-10% during off hours\n      : isPeakHours ? 0.6 + Math.random() * 0.2 // 60-80% during peak hours\n      : 0.25 + Math.random() * 0.35 // 25-60% otherwise\n    }, {\n      locationId: 'university-center-dining',\n      name: 'Dining Hall',\n      occupancy: isOffHours ? 0.01 + Math.random() * 0.04 // 1-5% during off hours (closed)\n      : isLunchTime ? 0.85 + Math.random() * 0.15 // 85-100% during lunch rush\n      : isDinnerTime ? 0.75 + Math.random() * 0.2 // 75-95% during dinner\n      : 0.1 + Math.random() * 0.2 // 10-30% otherwise\n    }, {\n      locationId: 'science-building-cafe',\n      name: 'Science CafÃ©',\n      occupancy: isOffHours ? 0 // 0% during off hours (closed)\n      : isLunchTime ? 0.7 + Math.random() * 0.25 // 70-95% during lunch\n      : 0.2 + Math.random() * 0.3 // 20-50% otherwise\n    }, {\n      locationId: 'computer-lab-main',\n      name: 'Main Computer Lab',\n      occupancy: isOffHours ? 0.05 + Math.random() * 0.1 // 5-15% during off hours (24/7 lab)\n      : isPeakHours ? 0.6 + Math.random() * 0.3 // 60-90% during peak hours\n      : 0.3 + Math.random() * 0.2 // 30-50% otherwise\n    }];\n  };\n\n  // Clear chat history when page is reloaded\n  useEffect(() => {\n    // Remove sessionId from localStorage to start a fresh chat session\n    localStorage.removeItem('sessionId');\n    // Generate a new sessionId (this will happen in the socketService when it initializes)\n    console.log('Cleared chat session due to page reload');\n  }, []);\n\n  // Scroll to bottom of chat when messages update\n  useEffect(() => {\n    if (chatBottomRef.current) {\n      chatBottomRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const toggleChat = () => {\n    setIsAnimating(true);\n    setIsOpen(!isOpen);\n\n    // Reset animation state after animation completes\n    setTimeout(() => {\n      setIsAnimating(false);\n    }, 300);\n  };\n\n  // Ambient intelligence system - periodically fetch ambient insights\n  useEffect(() => {\n    // Only run when chat is open, user is connected, and we're not in user selection mode\n    if (isOpen && user !== null && user !== void 0 && user.type && !isSelectingUserType && socketService.isConnected()) {\n      console.log('Setting up ambient insight polling');\n\n      // Initial fetch for heatmap data and insights\n      const fetchAmbientData = async () => {\n        try {\n          // Get ambient insight\n          const insight = await socketService.getAmbientInsight();\n\n          // If we got an interesting insight, add it as a system message\n          if (insight) {\n            console.log('Received ambient insight:', insight);\n\n            // Add the insight as a message from the AI\n            setMessages(prev => [...prev, {\n              id: Date.now(),\n              text: insight,\n              sender: 'ai',\n              timestamp: new Date()\n            }]);\n\n            // Show the heatmap if the insight mentions crowdedness\n            if (insight.toLowerCase().includes('crowd') || insight.toLowerCase().includes('busy') || insight.toLowerCase().includes('quiet') || insight.toLowerCase().includes('occupancy') || insight.toLowerCase().includes('capacity')) {\n              // Mock heatmap data (would come from the server in a real implementation)\n              setHeatmapData([{\n                locationId: 'goddard-library',\n                name: 'Goddard Library',\n                occupancy: 0.85\n              }, {\n                locationId: 'academic-commons',\n                name: 'Academic Commons',\n                occupancy: 0.65\n              }, {\n                locationId: 'university-center-dining',\n                name: 'Dining Hall',\n                occupancy: 0.92\n              }, {\n                locationId: 'science-building-cafe',\n                name: 'Science CafÃ©',\n                occupancy: 0.45\n              }, {\n                locationId: 'computer-lab-main',\n                name: 'Main Computer Lab',\n                occupancy: 0.70\n              }]);\n              setShowHeatmap(true);\n            }\n          }\n        } catch (error) {\n          console.error('Error fetching ambient data:', error);\n        }\n      };\n\n      // Fetch immediately on first load\n      fetchAmbientData();\n\n      // Set up periodic polling (every 5 minutes)\n      const intervalId = setInterval(fetchAmbientData, 5 * 60 * 1000);\n\n      // Store interval ID in ref for cleanup\n      ambientInsightTimer.current = intervalId;\n\n      // Cleanup on component unmount\n      return () => {\n        if (ambientInsightTimer.current) {\n          clearInterval(ambientInsightTimer.current);\n          ambientInsightTimer.current = null;\n        }\n      };\n    }\n  }, [isOpen, isSelectingUserType, user === null || user === void 0 ? void 0 : user.type]);\n\n  // Connect to socket when user selects type\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.type && !isSelectingUserType) {\n      // Show connecting status\n      setConnectionError(null);\n      setIsLoading(true);\n      let isMounted = true;\n\n      // Attempt to connect with retry logic\n      const connectWithRetry = (retries = 3) => {\n        console.log('Attempting to connect to socket server, retries left:', retries);\n        socketService.connect(user.type).then(() => {\n          if (!isMounted) return;\n          console.log('Socket connection successful');\n          setConnectionError(null);\n\n          // Try to load chat history\n          return socketService.getChatHistory();\n        }).then(history => {\n          if (!isMounted || !history) return;\n          if (history.length > 0) {\n            console.log('Setting chat history:', history);\n            setMessages(history.map(msg => ({\n              id: typeof msg.id === 'string' ? parseInt(msg.id) : msg.id || Date.now(),\n              text: msg.text,\n              sender: msg.sender,\n              timestamp: msg.timestamp instanceof Date ? msg.timestamp : new Date(msg.timestamp)\n            })));\n          }\n          setIsLoading(false);\n        }).catch(error => {\n          console.error('Connection error:', error);\n          if (!isMounted) return;\n          if (retries > 0) {\n            // Retry connection after delay\n            setTimeout(() => connectWithRetry(retries - 1), 2000);\n          } else {\n            setConnectionError('Could not connect to AI service. Please refresh and try again.');\n            setIsLoading(false);\n          }\n        });\n      };\n\n      // Set up message listener\n      const cleanupListener = socketService.onMessage(message => {\n        if (!isMounted) return;\n        console.log('Processing received message:', message);\n        setMessages(prev => [...prev, {\n          id: typeof message.id === 'string' ? parseInt(message.id) : message.id || Date.now(),\n          text: message.text,\n          sender: message.sender,\n          timestamp: message.timestamp instanceof Date ? message.timestamp : new Date(message.timestamp)\n        }]);\n        setIsLoading(false);\n      });\n\n      // Start connection process\n      connectWithRetry();\n\n      // Cleanup function\n      return () => {\n        isMounted = false;\n        cleanupListener();\n        socketService.disconnect();\n      };\n    }\n  }, [user === null || user === void 0 ? void 0 : user.type, isSelectingUserType]);\n  const handleUserSelect = type => {\n    setUserType(type);\n    setIsSelectingUserType(false);\n    setConnectionError(null);\n\n    // Add welcome message - this will be shown immediately while we connect to socket\n    const welcomeMessage = getWelcomeMessage(type);\n    setMessages([{\n      id: Date.now(),\n      text: welcomeMessage,\n      sender: 'ai',\n      timestamp: new Date()\n    }]);\n  };\n  const getWelcomeMessage = type => {\n    switch (type) {\n      case 'student':\n        return 'Welcome to Clark AI! I can help you with course information, campus resources, ClarkYou credentials, OneCard queries, appointment scheduling, and more. What can I assist you with today?';\n      case 'faculty':\n        return 'Welcome to Clark AI! I can help you with campus resources, course schedules, and other faculty services. How can I assist you today?';\n      case 'other':\n        return 'Welcome to Clark AI! I can provide information about commuter options, places near Clark, and general university information. What would you like to know?';\n      default:\n        return 'Welcome to Clark AI! How can I help you today?';\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!input.trim()) return;\n\n    // Check connection status first\n    if (!socketService.isConnected()) {\n      setConnectionError('Connection to server lost. Attempting to reconnect...');\n      try {\n        // Try to reconnect\n        await socketService.connect((user === null || user === void 0 ? void 0 : user.type) || 'student');\n        // Clear error if successful\n        setConnectionError(null);\n      } catch (error) {\n        console.error('Reconnection failed:', error);\n        setConnectionError('Could not reconnect to AI service. Please refresh the page.');\n        return;\n      }\n    }\n\n    // Add user message to the UI immediately\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const sentMessage = input;\n    setInput('');\n    setIsLoading(true);\n\n    // Check if message is about booking study rooms - add extra \"thinking\" time if it is\n    const isStudyRoomBookingRequest = sentMessage.toLowerCase().includes('study room') && (sentMessage.toLowerCase().includes('book') || sentMessage.toLowerCase().includes('reserve') || sentMessage.toLowerCase().includes('schedule'));\n    try {\n      if (isStudyRoomBookingRequest) {\n        // Add a minimum 3 second \"thinking\" time for study room bookings\n        // to make it appear as if the system is checking availability\n        await new Promise(resolve => setTimeout(resolve, 3000));\n      }\n\n      // Send message to AI backend\n      await socketService.sendMessage(sentMessage);\n\n      // The response will be handled by the socket listener in useEffect\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setIsLoading(false);\n\n      // Show error message with more detail\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        text: error instanceof Error ? `Sorry, I encountered an error processing your request. ${error.message}` : \"Sorry, I couldn't process your message. Please try again later.\",\n        sender: 'ai',\n        timestamp: new Date()\n      }]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const handleChipClick = text => {\n    setInput(text);\n  };\n  const resetChat = () => {\n    setIsSelectingUserType(true);\n    setMessages([]);\n\n    // Force generation of a new session ID to clear all ongoing conversations\n    localStorage.removeItem('sessionId');\n    // Disconnect and reconnect to clear any ongoing operations on the server side\n    socketService.disconnect();\n    console.log('Chat reset: cleared session and disconnected socket');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isOpen && /*#__PURE__*/_jsxDEV(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"chat\",\n      sx: {\n        position: 'fixed',\n        bottom: 24,\n        right: 24,\n        bgcolor: '#FF6B81',\n        // Lighter shade of red\n        zIndex: 9999,\n        // Same high z-index as the chat window\n        '&:hover': {\n          bgcolor: '#FF4757' // Slightly darker on hover\n        },\n        padding: '8px' // Add padding for the image\n      },\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"img\",\n        src: cougarLogoUrl,\n        alt: \"Clark University Cougar\",\n        sx: {\n          width: '30px',\n          height: '30px',\n          objectFit: 'contain'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      sx: {\n        position: 'fixed',\n        bottom: 24,\n        right: 24,\n        width: 400,\n        height: 520,\n        borderRadius: 2,\n        overflow: 'hidden',\n        display: 'flex',\n        flexDirection: 'column',\n        animation: isAnimating ? 'fadeIn 0.3s ease-in-out' : 'none',\n        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.15)',\n        zIndex: 9999,\n        // Ensure it's above all other elements\n        '@keyframes fadeIn': {\n          '0%': {\n            opacity: 0,\n            transform: 'translateY(20px) scale(0.9)'\n          },\n          '100%': {\n            opacity: 1,\n            transform: 'translateY(0) scale(1)'\n          }\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          bgcolor: '#FF6B81',\n          // Lighter shade of red to match button\n          color: 'white',\n          p: 1.5,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\n          position: 'relative',\n          '&::after': {\n            content: '\"\"',\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            height: '3px',\n            background: 'linear-gradient(90deg, rgba(255,107,129,1) 0%, rgba(255,255,255,0.7) 50%, rgba(255,107,129,1) 100%)'\n          }\n        },\n        children: [!isSelectingUserType && /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          size: \"small\",\n          onClick: () => setDrawerOpen(true),\n          sx: {\n            transition: 'transform 0.3s',\n            '&:hover': {\n              transform: 'rotate(180deg)'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            ml: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://www.clarku.edu/wp-content/themes/clarku/assets/img/main-logo.svg\",\n            alt: \"Clark University Logo\",\n            style: {\n              height: '28px',\n              marginRight: '8px'\n              // filter: 'brightness(0) invert(1)' // Make the logo white\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              fontFamily: '\"Merriweather\", serif',\n              fontWeight: 700,\n              fontSize: '1rem',\n              letterSpacing: '0.5px',\n              textShadow: '0 1px 2px rgba(0,0,0,0.2)'\n            },\n            children: \"AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            size: \"small\",\n            onClick: () => setIsOpen(false),\n            sx: {\n              mr: 0.5,\n              transition: 'all 0.2s',\n              '&:hover': {\n                transform: 'translateY(-2px)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(MinimizeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            size: \"small\",\n            onClick: () => {\n              setIsOpen(false);\n              resetChat();\n            },\n            sx: {\n              transition: 'all 0.2s',\n              '&:hover': {\n                transform: 'rotate(90deg)'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this), isSelectingUserType ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 3,\n          overflow: 'auto',\n          flexGrow: 1,\n          background: 'linear-gradient(to bottom, #f8f8f8, #ffffff)',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          gutterBottom: true,\n          sx: {\n            fontFamily: '\"Merriweather\", serif',\n            fontWeight: 700,\n            color: '#2a2a2a',\n            textAlign: 'center',\n            mb: 3,\n            position: 'relative',\n            '&::after': {\n              content: '\"\"',\n              position: 'absolute',\n              bottom: -8,\n              left: '50%',\n              transform: 'translateX(-50%)',\n              width: '60px',\n              height: '3px',\n              backgroundColor: '#FF6B81'\n            }\n          },\n          children: \"Hello\\uD83D\\uDE00 I am ClarkGuide\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1.5,\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            sx: {\n              p: 1.5,\n              cursor: 'pointer',\n              transition: 'all 0.3s',\n              border: '1px solid #eaeaea',\n              borderRadius: '12px',\n              background: 'linear-gradient(145deg, #ffffff, #f9f9f9)',\n              '&:hover': {\n                transform: 'translateY(-3px)',\n                boxShadow: '0 5px 12px rgba(255,107,129,0.15)',\n                borderColor: '#FF6B81',\n                background: 'linear-gradient(145deg, #ffffff, #fff8f8)'\n              }\n            },\n            onClick: () => handleUserSelect('student'),\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mr: 2,\n                  p: 1,\n                  borderRadius: '50%',\n                  bgcolor: 'rgba(255,107,129,0.08)',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  width: 42,\n                  height: 42\n                },\n                children: /*#__PURE__*/_jsxDEV(SchoolIcon, {\n                  sx: {\n                    fontSize: 24,\n                    color: '#FF6B81'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    fontFamily: '\"Merriweather\", serif',\n                    fontWeight: 600,\n                    fontSize: '1rem'\n                  },\n                  children: \"Student\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    lineHeight: 1.4,\n                    fontSize: '0.85rem'\n                  },\n                  children: \"Access course info, campus resources, ClarkYou help, and more\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 635,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            sx: {\n              p: 1.5,\n              cursor: 'pointer',\n              transition: 'all 0.3s',\n              border: '1px solid #eaeaea',\n              borderRadius: '12px',\n              background: 'linear-gradient(145deg, #ffffff, #f9f9f9)',\n              '&:hover': {\n                transform: 'translateY(-3px)',\n                boxShadow: '0 5px 12px rgba(255,107,129,0.15)',\n                borderColor: '#FF6B81',\n                background: 'linear-gradient(145deg, #ffffff, #fff8f8)'\n              }\n            },\n            onClick: () => handleUserSelect('faculty'),\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mr: 2,\n                  p: 1,\n                  borderRadius: '50%',\n                  bgcolor: 'rgba(255,107,129,0.08)',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  width: 42,\n                  height: 42\n                },\n                children: /*#__PURE__*/_jsxDEV(WorkIcon, {\n                  sx: {\n                    fontSize: 24,\n                    color: '#FF6B81'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    fontFamily: '\"Merriweather\", serif',\n                    fontWeight: 600,\n                    fontSize: '1rem'\n                  },\n                  children: \"Faculty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 677,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    lineHeight: 1.4,\n                    fontSize: '0.85rem'\n                  },\n                  children: \"Campus resources, course schedules, and general support\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            sx: {\n              p: 1.5,\n              cursor: 'pointer',\n              transition: 'all 0.3s',\n              border: '1px solid #eaeaea',\n              borderRadius: '12px',\n              background: 'linear-gradient(145deg, #ffffff, #f9f9f9)',\n              '&:hover': {\n                transform: 'translateY(-3px)',\n                boxShadow: '0 5px 12px rgba(255,107,129,0.15)',\n                borderColor: '#FF6B81',\n                background: 'linear-gradient(145deg, #ffffff, #fff8f8)'\n              }\n            },\n            onClick: () => handleUserSelect('other'),\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mr: 2,\n                  p: 1,\n                  borderRadius: '50%',\n                  bgcolor: 'rgba(255,107,129,0.08)',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  width: 42,\n                  height: 42\n                },\n                children: /*#__PURE__*/_jsxDEV(PersonIcon, {\n                  sx: {\n                    fontSize: 24,\n                    color: '#FF6B81'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    fontFamily: '\"Merriweather\", serif',\n                    fontWeight: 600,\n                    fontSize: '1rem'\n                  },\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  sx: {\n                    lineHeight: 1.4,\n                    fontSize: '0.85rem'\n                  },\n                  children: \"Transportation, places near Clark, and general information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          sx: {\n            display: 'block',\n            textAlign: 'center',\n            mt: 5,\n            color: 'rgba(0,0,0,0.5)',\n            fontStyle: 'italic'\n          },\n          children: \"\\xA9 2025 Clark University Hackathon Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            overflow: 'auto',\n            flexGrow: 1\n          },\n          children: [connectionError && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 2,\n              mb: 2,\n              bgcolor: '#fff0f0',\n              borderRadius: 2,\n              border: '1px solid #ffcdd2'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"error\",\n              children: connectionError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 19\n          }, this), messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: message.sender === 'user' ? 'flex-end' : 'flex-start',\n              mb: 2,\n              animation: 'messageAppear 0.3s ease-out',\n              '@keyframes messageAppear': {\n                '0%': {\n                  opacity: 0,\n                  transform: message.sender === 'user' ? 'translateX(20px)' : 'translateX(-20px)'\n                },\n                '100%': {\n                  opacity: 1,\n                  transform: 'translateX(0)'\n                }\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 1,\n              sx: {\n                p: 1.5,\n                maxWidth: '80%',\n                borderRadius: message.sender === 'user' ? '18px 18px 4px 18px' : '18px 18px 18px 4px',\n                bgcolor: message.sender === 'user' ? '#FF6B81' : '#f5f5f5',\n                color: message.sender === 'user' ? 'white' : 'inherit',\n                fontFamily: message.sender === 'ai' ? '\"Merriweather\", serif' : 'inherit'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontFamily: message.sender === 'ai' ? '\"Merriweather\", serif' : 'inherit',\n                  lineHeight: 1.5\n                },\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: message.sender === 'user' ? 'rgba(255,255,255,0.7)' : 'text.secondary',\n                sx: {\n                  display: 'block',\n                  mt: 0.5\n                },\n                children: message.timestamp.toLocaleTimeString([], {\n                  hour: '2-digit',\n                  minute: '2-digit'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 21\n            }, this)\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: chatBottomRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 17\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'flex-start',\n              alignItems: 'center',\n              mb: 2,\n              pl: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 1,\n              sx: {\n                p: 2,\n                maxWidth: '80%',\n                borderRadius: '18px 18px 18px 4px',\n                bgcolor: '#f5f5f5'\n              },\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 16,\n                  sx: {\n                    color: '#FF6B81'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    fontFamily: '\"Merriweather\", serif',\n                    color: '#666'\n                  },\n                  children: \"Thinking...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 849,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 15\n        }, this), showHeatmap && heatmapData.length > 0 && /*#__PURE__*/_jsxDEV(CampusHeatmap, {\n          data: heatmapData,\n          onLocationClick: locationId => {\n            const location = heatmapData.find(d => d.locationId === locationId);\n            if (location) {\n              setInput(`Tell me more about ${location.name}`);\n            }\n          },\n          onClose: () => setShowHeatmap(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            borderTop: 1,\n            borderColor: 'divider'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              size: \"small\",\n              placeholder: \"Type your message...\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              onKeyPress: handleKeyPress,\n              variant: \"outlined\",\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              onClick: handleSendMessage,\n              disabled: !input.trim(),\n              sx: {\n                bgcolor: '#FF6B81',\n                color: 'white',\n                '&:hover': {\n                  bgcolor: '#FF4757'\n                },\n                '&.Mui-disabled': {\n                  bgcolor: '#e0e0e0',\n                  color: '#9e9e9e'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Library hours\",\n              size: \"small\",\n              variant: \"outlined\",\n              onClick: () => handleChipClick('What are the library hours?'),\n              clickable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 901,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"OneCard\",\n              size: \"small\",\n              variant: \"outlined\",\n              onClick: () => handleChipClick('I need help with my OneCard'),\n              clickable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Courses\",\n              size: \"small\",\n              variant: \"outlined\",\n              onClick: () => handleChipClick('What is my course schedule?'),\n              clickable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Campus activity\",\n              size: \"small\",\n              variant: \"outlined\",\n              color: \"primary\",\n              onClick: () => {\n                // Show the heatmap with time-adjusted data if it's not already showing\n                if (!showHeatmap) {\n                  const timeAdjustedData = getTimeAdjustedOccupancyData();\n                  setHeatmapData(timeAdjustedData);\n                  setShowHeatmap(true);\n\n                  // Add ambient insight message based on current data\n                  const diningHall = timeAdjustedData.find(d => d.locationId === 'university-center-dining');\n                  const scienceCafe = timeAdjustedData.find(d => d.locationId === 'science-building-cafe');\n\n                  // Find busiest and quietest locations\n                  const sortedByOccupancy = [...timeAdjustedData].sort((a, b) => b.occupancy - a.occupancy);\n                  const busiest = sortedByOccupancy[0];\n                  const quietest = sortedByOccupancy[sortedByOccupancy.length - 1];\n\n                  // Create message with actual occupancy percentages\n                  let insightMessage = \"Here's the current campus activity heatmap. \";\n                  if (busiest.occupancy > 0.7) {\n                    insightMessage += `${busiest.name} is quite busy right now (${Math.round(busiest.occupancy * 100)}% capacity)`;\n                    if (quietest.occupancy < 0.5) {\n                      insightMessage += `, while ${quietest.name} is a good option if you're looking for a quieter spot (${Math.round(quietest.occupancy * 100)}% capacity).`;\n                    } else {\n                      insightMessage += \". All campus locations are fairly active at this time.\";\n                    }\n                  } else {\n                    insightMessage += \"Campus locations are not very crowded right now - a great time to visit!\";\n                  }\n                  setMessages(prev => [...prev, {\n                    id: Date.now(),\n                    text: insightMessage,\n                    sender: 'ai',\n                    timestamp: new Date()\n                  }]);\n                } else {\n                  // If already showing, just ask for quiet spots\n                  handleChipClick('Where can I find a quiet place to study right now?');\n                }\n              },\n              clickable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: drawerOpen,\n      onClose: () => setDrawerOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 250,\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [(user === null || user === void 0 ? void 0 : user.type) === 'student' ? 'Student' : (user === null || user === void 0 ? void 0 : user.type) === 'faculty' ? 'Faculty' : 'Other', \" Options\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => {\n              resetChat();\n              setDrawerOpen(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Change User Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => {\n              // Clear all messages\n              setMessages([]);\n\n              // Force generation of a new session ID to clear any ongoing conversations\n              localStorage.removeItem('sessionId');\n\n              // Disconnect and reconnect to clear any ongoing operations on the server side\n              socketService.disconnect();\n              console.log('Chat reset: starting new chat with fresh session');\n\n              // Show welcome message\n              setMessages([{\n                id: Date.now(),\n                text: getWelcomeMessage((user === null || user === void 0 ? void 0 : user.type) || 'student'),\n                sender: 'ai',\n                timestamp: new Date()\n              }]);\n              setDrawerOpen(false);\n\n              // Reconnect with the same user type\n              if (user !== null && user !== void 0 && user.type) {\n                setIsLoading(true);\n                socketService.connect(user.type).then(() => setIsLoading(false)).catch(error => {\n                  console.error('Error reconnecting:', error);\n                  setConnectionError('Could not reconnect. Please refresh the page.');\n                  setIsLoading(false);\n                });\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Start New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1029,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 989,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 984,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatWidget, \"nohWvf8vka+c/eE9x31nh/k+phg=\", false, function () {\n  return [useTheme, useUser];\n});\n_c = ChatWidget;\nexport default ChatWidget;\nvar _c;\n$RefreshReg$(_c, \"ChatWidget\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Fab","Paper","Typography","TextField","IconButton","Drawer","List","ListItem","Divider","Chip","useTheme","CircularProgress","socketService","CampusHeatmap","SendIcon","CloseIcon","MinimizeIcon","MenuIcon","SchoolIcon","WorkIcon","PersonIcon","useUser","jsxDEV","_jsxDEV","Fragment","_Fragment","cougarLogoUrl","ChatWidget","_s","theme","isOpen","setIsOpen","isSelectingUserType","setIsSelectingUserType","drawerOpen","setDrawerOpen","input","setInput","messages","setMessages","isAnimating","setIsAnimating","isLoading","setIsLoading","connectionError","setConnectionError","chatBottomRef","user","setUserType","showHeatmap","setShowHeatmap","heatmapData","setHeatmapData","ambientInsightTimer","getTimeAdjustedOccupancyData","currentHour","Date","getHours","isOffHours","isLunchTime","isDinnerTime","isPeakHours","locationId","name","occupancy","Math","random","localStorage","removeItem","console","log","current","scrollIntoView","behavior","toggleChat","setTimeout","type","isConnected","fetchAmbientData","insight","getAmbientInsight","prev","id","now","text","sender","timestamp","toLowerCase","includes","error","intervalId","setInterval","clearInterval","isMounted","connectWithRetry","retries","connect","then","getChatHistory","history","length","map","msg","parseInt","catch","cleanupListener","onMessage","message","disconnect","handleUserSelect","welcomeMessage","getWelcomeMessage","handleSendMessage","trim","userMessage","sentMessage","isStudyRoomBookingRequest","Promise","resolve","sendMessage","Error","handleKeyPress","e","key","shiftKey","preventDefault","handleChipClick","resetChat","children","color","sx","position","bottom","right","bgcolor","zIndex","padding","onClick","component","src","alt","width","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","elevation","borderRadius","overflow","display","flexDirection","animation","boxShadow","opacity","transform","p","justifyContent","alignItems","content","left","background","size","transition","ml","style","marginRight","variant","fontFamily","fontWeight","fontSize","letterSpacing","textShadow","flexGrow","mr","gutterBottom","textAlign","mb","backgroundColor","gap","mt","cursor","border","borderColor","lineHeight","fontStyle","index","maxWidth","toLocaleTimeString","hour","minute","ref","pl","data","onLocationClick","location","find","d","onClose","borderTop","fullWidth","placeholder","value","onChange","target","onKeyPress","disabled","flexWrap","label","clickable","timeAdjustedData","diningHall","scienceCafe","sortedByOccupancy","sort","a","b","busiest","quietest","insightMessage","round","anchor","open","my","button","_c","$RefreshReg$"],"sources":["C:/Users/haris/clark-guide/clark-chatbox/frontend/src/components/ChatWidget.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { \r\n  Box, \r\n  Fab, \r\n  Paper, \r\n  Typography, \r\n  TextField,\r\n  IconButton,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  Divider,\r\n  Button,\r\n  Chip,\r\n  useTheme,\r\n  alpha,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport socketService, { ChatMessage as SocketMessage } from '../services/socketService';\r\nimport CampusHeatmap, { HeatmapData } from './CampusHeatmap';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport MinimizeIcon from '@mui/icons-material/Minimize';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nimport { useUser, UserType } from '../contexts/UserContext';\r\n\r\n// URL for Cougar SVG logo\r\nconst cougarLogoUrl = \"https://dxbhsrqyrr690.cloudfront.net/sidearm.nextgen.sites/clarku.sidearmsports.com/images/responsive_2023/CU%20Cougar%20on%20White.svg\";\r\n\r\ninterface Message {\r\n  id: number;\r\n  text: string;\r\n  sender: 'user' | 'ai';\r\n  timestamp: Date;\r\n}\r\n\r\nconst ChatWidget: React.FC = () => {\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isSelectingUserType, setIsSelectingUserType] = useState(true);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [connectionError, setConnectionError] = useState<string | null>(null);\r\n  const chatBottomRef = useRef<HTMLDivElement>(null);\r\n  const { user, setUserType } = useUser();\r\n  \r\n  // Campus ambient intelligence features\r\n  const [showHeatmap, setShowHeatmap] = useState(false);\r\n  const [heatmapData, setHeatmapData] = useState<HeatmapData[]>([]);\r\n  const ambientInsightTimer = useRef<NodeJS.Timeout | null>(null);\r\n  \r\n  // Generate realistic occupancy data based on time of day\r\n  const getTimeAdjustedOccupancyData = (): HeatmapData[] => {\r\n    const currentHour = new Date().getHours();\r\n    const isOffHours = currentHour >= 22 || currentHour < 8; // 10 PM to 8 AM\r\n    const isLunchTime = currentHour >= 11 && currentHour <= 14; // 11 AM to 2 PM\r\n    const isDinnerTime = currentHour >= 17 && currentHour <= 20; // 5 PM to 8 PM\r\n    const isPeakHours = currentHour >= 10 && currentHour <= 16; // 10 AM to 4 PM\r\n    \r\n    return [\r\n      { \r\n        locationId: 'goddard-library', \r\n        name: 'Goddard Library', \r\n        occupancy: isOffHours \r\n          ? 0.05 + Math.random() * 0.1 // 5-15% during off hours\r\n          : isPeakHours \r\n            ? 0.7 + Math.random() * 0.15 // 70-85% during peak hours\r\n            : 0.3 + Math.random() * 0.3 // 30-60% otherwise\r\n      },\r\n      { \r\n        locationId: 'academic-commons', \r\n        name: 'Academic Commons', \r\n        occupancy: isOffHours \r\n          ? 0.03 + Math.random() * 0.07 // 3-10% during off hours\r\n          : isPeakHours \r\n            ? 0.6 + Math.random() * 0.2 // 60-80% during peak hours\r\n            : 0.25 + Math.random() * 0.35 // 25-60% otherwise\r\n      },\r\n      { \r\n        locationId: 'university-center-dining', \r\n        name: 'Dining Hall', \r\n        occupancy: isOffHours \r\n          ? 0.01 + Math.random() * 0.04 // 1-5% during off hours (closed)\r\n          : isLunchTime \r\n            ? 0.85 + Math.random() * 0.15 // 85-100% during lunch rush\r\n            : isDinnerTime\r\n              ? 0.75 + Math.random() * 0.2 // 75-95% during dinner\r\n              : 0.1 + Math.random() * 0.2 // 10-30% otherwise\r\n      },\r\n      { \r\n        locationId: 'science-building-cafe', \r\n        name: 'Science CafÃ©', \r\n        occupancy: isOffHours \r\n          ? 0 // 0% during off hours (closed)\r\n          : isLunchTime \r\n            ? 0.7 + Math.random() * 0.25 // 70-95% during lunch\r\n            : 0.2 + Math.random() * 0.3 // 20-50% otherwise\r\n      },\r\n      { \r\n        locationId: 'computer-lab-main', \r\n        name: 'Main Computer Lab', \r\n        occupancy: isOffHours \r\n          ? 0.05 + Math.random() * 0.1 // 5-15% during off hours (24/7 lab)\r\n          : isPeakHours \r\n            ? 0.6 + Math.random() * 0.3 // 60-90% during peak hours\r\n            : 0.3 + Math.random() * 0.2 // 30-50% otherwise\r\n      }\r\n    ];\r\n  };\r\n\r\n  // Clear chat history when page is reloaded\r\n  useEffect(() => {\r\n    // Remove sessionId from localStorage to start a fresh chat session\r\n    localStorage.removeItem('sessionId');\r\n    // Generate a new sessionId (this will happen in the socketService when it initializes)\r\n    console.log('Cleared chat session due to page reload');\r\n  }, []);\r\n\r\n  // Scroll to bottom of chat when messages update\r\n  useEffect(() => {\r\n    if (chatBottomRef.current) {\r\n      chatBottomRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [messages]);\r\n\r\n  const toggleChat = () => {\r\n    setIsAnimating(true);\r\n    setIsOpen(!isOpen);\r\n    \r\n    // Reset animation state after animation completes\r\n    setTimeout(() => {\r\n      setIsAnimating(false);\r\n    }, 300);\r\n  };\r\n\r\n  // Ambient intelligence system - periodically fetch ambient insights\r\n  useEffect(() => {\r\n    // Only run when chat is open, user is connected, and we're not in user selection mode\r\n    if (isOpen && user?.type && !isSelectingUserType && socketService.isConnected()) {\r\n      console.log('Setting up ambient insight polling');\r\n      \r\n      // Initial fetch for heatmap data and insights\r\n      const fetchAmbientData = async () => {\r\n        try {\r\n          // Get ambient insight\r\n          const insight = await socketService.getAmbientInsight();\r\n          \r\n          // If we got an interesting insight, add it as a system message\r\n          if (insight) {\r\n            console.log('Received ambient insight:', insight);\r\n            \r\n            // Add the insight as a message from the AI\r\n            setMessages(prev => [...prev, {\r\n              id: Date.now(),\r\n              text: insight,\r\n              sender: 'ai',\r\n              timestamp: new Date()\r\n            }]);\r\n            \r\n            // Show the heatmap if the insight mentions crowdedness\r\n            if (insight.toLowerCase().includes('crowd') || \r\n                insight.toLowerCase().includes('busy') || \r\n                insight.toLowerCase().includes('quiet') ||\r\n                insight.toLowerCase().includes('occupancy') ||\r\n                insight.toLowerCase().includes('capacity')) {\r\n              \r\n              // Mock heatmap data (would come from the server in a real implementation)\r\n              setHeatmapData([\r\n                { locationId: 'goddard-library', name: 'Goddard Library', occupancy: 0.85 },\r\n                { locationId: 'academic-commons', name: 'Academic Commons', occupancy: 0.65 },\r\n                { locationId: 'university-center-dining', name: 'Dining Hall', occupancy: 0.92 },\r\n                { locationId: 'science-building-cafe', name: 'Science CafÃ©', occupancy: 0.45 },\r\n                { locationId: 'computer-lab-main', name: 'Main Computer Lab', occupancy: 0.70 }\r\n              ]);\r\n              setShowHeatmap(true);\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching ambient data:', error);\r\n        }\r\n      };\r\n      \r\n      // Fetch immediately on first load\r\n      fetchAmbientData();\r\n      \r\n      // Set up periodic polling (every 5 minutes)\r\n      const intervalId = setInterval(fetchAmbientData, 5 * 60 * 1000);\r\n      \r\n      // Store interval ID in ref for cleanup\r\n      ambientInsightTimer.current = intervalId;\r\n      \r\n      // Cleanup on component unmount\r\n      return () => {\r\n        if (ambientInsightTimer.current) {\r\n          clearInterval(ambientInsightTimer.current);\r\n          ambientInsightTimer.current = null;\r\n        }\r\n      };\r\n    }\r\n  }, [isOpen, isSelectingUserType, user?.type]);\r\n\r\n  // Connect to socket when user selects type\r\n  useEffect(() => {\r\n    if (user?.type && !isSelectingUserType) {\r\n      // Show connecting status\r\n      setConnectionError(null);\r\n      setIsLoading(true);\r\n      \r\n      let isMounted = true;\r\n      \r\n      // Attempt to connect with retry logic\r\n      const connectWithRetry = (retries = 3) => {\r\n        console.log('Attempting to connect to socket server, retries left:', retries);\r\n        \r\n        socketService.connect(user.type!)\r\n          .then(() => {\r\n            if (!isMounted) return;\r\n            \r\n            console.log('Socket connection successful');\r\n            setConnectionError(null);\r\n            \r\n            // Try to load chat history\r\n            return socketService.getChatHistory();\r\n          })\r\n          .then(history => {\r\n            if (!isMounted || !history) return;\r\n            \r\n            if (history.length > 0) {\r\n              console.log('Setting chat history:', history);\r\n              setMessages(history.map(msg => ({\r\n                id: typeof msg.id === 'string' ? parseInt(msg.id) : (msg.id as number || Date.now()),\r\n                text: msg.text,\r\n                sender: msg.sender,\r\n                timestamp: msg.timestamp instanceof Date ? msg.timestamp : new Date(msg.timestamp)\r\n              })));\r\n            }\r\n            setIsLoading(false);\r\n          })\r\n          .catch(error => {\r\n            console.error('Connection error:', error);\r\n            if (!isMounted) return;\r\n            \r\n            if (retries > 0) {\r\n              // Retry connection after delay\r\n              setTimeout(() => connectWithRetry(retries - 1), 2000);\r\n            } else {\r\n              setConnectionError('Could not connect to AI service. Please refresh and try again.');\r\n              setIsLoading(false);\r\n            }\r\n          });\r\n      };\r\n      \r\n      // Set up message listener\r\n      const cleanupListener = socketService.onMessage((message) => {\r\n        if (!isMounted) return;\r\n        \r\n        console.log('Processing received message:', message);\r\n        setMessages(prev => [...prev, {\r\n          id: typeof message.id === 'string' ? parseInt(message.id) : (message.id || Date.now()),\r\n          text: message.text,\r\n          sender: message.sender,\r\n          timestamp: message.timestamp instanceof Date ? message.timestamp : new Date(message.timestamp)\r\n        }]);\r\n        setIsLoading(false);\r\n      });\r\n      \r\n      // Start connection process\r\n      connectWithRetry();\r\n      \r\n      // Cleanup function\r\n      return () => {\r\n        isMounted = false;\r\n        cleanupListener();\r\n        socketService.disconnect();\r\n      };\r\n    }\r\n  }, [user?.type, isSelectingUserType]);\r\n\r\n  const handleUserSelect = (type: UserType) => {\r\n    setUserType(type);\r\n    setIsSelectingUserType(false);\r\n    setConnectionError(null);\r\n    \r\n    // Add welcome message - this will be shown immediately while we connect to socket\r\n    const welcomeMessage = getWelcomeMessage(type);\r\n    setMessages([\r\n      { \r\n        id: Date.now(), \r\n        text: welcomeMessage, \r\n        sender: 'ai', \r\n        timestamp: new Date() \r\n      }\r\n    ]);\r\n  };\r\n\r\n  const getWelcomeMessage = (type: UserType): string => {\r\n    switch (type) {\r\n      case 'student':\r\n        return 'Welcome to Clark AI! I can help you with course information, campus resources, ClarkYou credentials, OneCard queries, appointment scheduling, and more. What can I assist you with today?';\r\n      case 'faculty':\r\n        return 'Welcome to Clark AI! I can help you with campus resources, course schedules, and other faculty services. How can I assist you today?';\r\n      case 'other':\r\n        return 'Welcome to Clark AI! I can provide information about commuter options, places near Clark, and general university information. What would you like to know?';\r\n      default:\r\n        return 'Welcome to Clark AI! How can I help you today?';\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!input.trim()) return;\r\n    \r\n    // Check connection status first\r\n    if (!socketService.isConnected()) {\r\n      setConnectionError('Connection to server lost. Attempting to reconnect...');\r\n      \r\n      try {\r\n        // Try to reconnect\r\n        await socketService.connect(user?.type || 'student');\r\n        // Clear error if successful\r\n        setConnectionError(null);\r\n      } catch (error) {\r\n        console.error('Reconnection failed:', error);\r\n        setConnectionError('Could not reconnect to AI service. Please refresh the page.');\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Add user message to the UI immediately\r\n    const userMessage: Message = {\r\n      id: Date.now(),\r\n      text: input,\r\n      sender: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    const sentMessage = input;\r\n    setInput('');\r\n    setIsLoading(true);\r\n    \r\n    // Check if message is about booking study rooms - add extra \"thinking\" time if it is\r\n    const isStudyRoomBookingRequest = sentMessage.toLowerCase().includes('study room') && \r\n      (sentMessage.toLowerCase().includes('book') || \r\n       sentMessage.toLowerCase().includes('reserve') || \r\n       sentMessage.toLowerCase().includes('schedule'));\r\n    \r\n    try {\r\n      if (isStudyRoomBookingRequest) {\r\n        // Add a minimum 3 second \"thinking\" time for study room bookings\r\n        // to make it appear as if the system is checking availability\r\n        await new Promise(resolve => setTimeout(resolve, 3000));\r\n      }\r\n      \r\n      // Send message to AI backend\r\n      await socketService.sendMessage(sentMessage);\r\n      \r\n      // The response will be handled by the socket listener in useEffect\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      setIsLoading(false);\r\n      \r\n      // Show error message with more detail\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        text: error instanceof Error ? \r\n          `Sorry, I encountered an error processing your request. ${error.message}` : \r\n          \"Sorry, I couldn't process your message. Please try again later.\",\r\n        sender: 'ai',\r\n        timestamp: new Date()\r\n      }]);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleChipClick = (text: string) => {\r\n    setInput(text);\r\n  };\r\n\r\n  const resetChat = () => {\r\n    setIsSelectingUserType(true);\r\n    setMessages([]);\r\n    \r\n    // Force generation of a new session ID to clear all ongoing conversations\r\n    localStorage.removeItem('sessionId');\r\n    // Disconnect and reconnect to clear any ongoing operations on the server side\r\n    socketService.disconnect();\r\n    console.log('Chat reset: cleared session and disconnected socket');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Chat Button */}\r\n      {!isOpen && (\r\n        <Fab\r\n          color=\"primary\"\r\n          aria-label=\"chat\"\r\n          sx={{\r\n            position: 'fixed',\r\n            bottom: 24,\r\n            right: 24,\r\n            bgcolor: '#FF6B81', // Lighter shade of red\r\n            zIndex: 9999, // Same high z-index as the chat window\r\n            '&:hover': {\r\n              bgcolor: '#FF4757', // Slightly darker on hover\r\n            },\r\n            padding: '8px', // Add padding for the image\r\n          }}\r\n          onClick={toggleChat}\r\n        >\r\n          {/* Use the Cougar SVG logo instead of ChatIcon */}\r\n          <Box \r\n            component=\"img\" \r\n            src={cougarLogoUrl}\r\n            alt=\"Clark University Cougar\"\r\n            sx={{ \r\n              width: '30px',\r\n              height: '30px',\r\n              objectFit: 'contain',\r\n            }}\r\n          />\r\n        </Fab>\r\n      )}\r\n\r\n      {/* Chat Window */}\r\n      {isOpen && (\r\n        <Paper\r\n          elevation={4}\r\n          sx={{\r\n            position: 'fixed',\r\n            bottom: 24,\r\n            right: 24,\r\n            width: 400,\r\n            height: 520,\r\n            borderRadius: 2,\r\n            overflow: 'hidden',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            animation: isAnimating ? 'fadeIn 0.3s ease-in-out' : 'none',\r\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.15)',\r\n            zIndex: 9999, // Ensure it's above all other elements\r\n            '@keyframes fadeIn': {\r\n              '0%': { opacity: 0, transform: 'translateY(20px) scale(0.9)' },\r\n              '100%': { opacity: 1, transform: 'translateY(0) scale(1)' }\r\n            },\r\n          }}\r\n        >\r\n          {/* Chat Header */}\r\n          <Box\r\n            sx={{\r\n              bgcolor: '#FF6B81', // Lighter shade of red to match button\r\n              color: 'white',\r\n              p: 1.5,\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.2)',\r\n              position: 'relative',\r\n              '&::after': {\r\n                content: '\"\"',\r\n                position: 'absolute',\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                height: '3px',\r\n                background: 'linear-gradient(90deg, rgba(255,107,129,1) 0%, rgba(255,255,255,0.7) 50%, rgba(255,107,129,1) 100%)'\r\n              }\r\n            }}\r\n          >\r\n            {!isSelectingUserType && (\r\n              <IconButton\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => setDrawerOpen(true)}\r\n                sx={{\r\n                  transition: 'transform 0.3s',\r\n                  '&:hover': { transform: 'rotate(180deg)' }\r\n                }}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            )}\r\n            \r\n            <Box sx={{ display: 'flex', alignItems: 'center', ml: 1 }}>\r\n              <img \r\n                src=\"https://www.clarku.edu/wp-content/themes/clarku/assets/img/main-logo.svg\" \r\n                alt=\"Clark University Logo\" \r\n                style={{ \r\n                  height: '28px', \r\n                  marginRight: '8px',\r\n                  // filter: 'brightness(0) invert(1)' // Make the logo white\r\n                }} \r\n              />\r\n              <Typography \r\n                variant=\"h6\" \r\n                component=\"div\" \r\n                sx={{ \r\n                  fontFamily: '\"Merriweather\", serif',\r\n                  fontWeight: 700,\r\n                  fontSize: '1rem',\r\n                  letterSpacing: '0.5px',\r\n                  textShadow: '0 1px 2px rgba(0,0,0,0.2)'\r\n                }}\r\n              >\r\n                AI\r\n              </Typography>\r\n            </Box>\r\n            <Box sx={{ flexGrow: 1 }} />\r\n            \r\n            <Box>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => setIsOpen(false)}\r\n                sx={{ \r\n                  mr: 0.5,\r\n                  transition: 'all 0.2s',\r\n                  '&:hover': { transform: 'translateY(-2px)' }\r\n                }}\r\n              >\r\n                <MinimizeIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setIsOpen(false);\r\n                  resetChat();\r\n                }}\r\n                sx={{\r\n                  transition: 'all 0.2s',\r\n                  '&:hover': { transform: 'rotate(90deg)' }\r\n                }}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* User Type Selection */}\r\n          {isSelectingUserType ? (\r\n            <Box \r\n              sx={{ \r\n                p: 3, \r\n                overflow: 'auto', \r\n                flexGrow: 1,\r\n                background: 'linear-gradient(to bottom, #f8f8f8, #ffffff)',\r\n                position: 'relative'\r\n              }}\r\n            >\r\n              <Typography \r\n                variant=\"h5\" \r\n                component=\"div\" \r\n                gutterBottom\r\n                sx={{ \r\n                  fontFamily: '\"Merriweather\", serif',\r\n                  fontWeight: 700,\r\n                  color: '#2a2a2a',\r\n                  textAlign: 'center',\r\n                  mb: 3,\r\n                  position: 'relative',\r\n                  '&::after': {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    bottom: -8,\r\n                    left: '50%',\r\n                    transform: 'translateX(-50%)',\r\n                    width: '60px',\r\n                    height: '3px',\r\n                    backgroundColor: '#FF6B81'\r\n                  }\r\n                }}\r\n              >\r\n                Helloğ I am ClarkGuideğ¬\r\n              </Typography>\r\n              \r\n              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1.5, mt: 2 }}>\r\n                <Paper\r\n                  elevation={2}\r\n                  sx={{\r\n                    p: 1.5,\r\n                    cursor: 'pointer',\r\n                    transition: 'all 0.3s',\r\n                    border: '1px solid #eaeaea',\r\n                    borderRadius: '12px',\r\n                    background: 'linear-gradient(145deg, #ffffff, #f9f9f9)',\r\n                    '&:hover': { \r\n                      transform: 'translateY(-3px)', \r\n                      boxShadow: '0 5px 12px rgba(255,107,129,0.15)',\r\n                      borderColor: '#FF6B81',\r\n                      background: 'linear-gradient(145deg, #ffffff, #fff8f8)'\r\n                    },\r\n                  }}\r\n                  onClick={() => handleUserSelect('student')}\r\n                >\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Box \r\n                      sx={{ \r\n                        mr: 2, \r\n                        p: 1, \r\n                        borderRadius: '50%',\r\n                        bgcolor: 'rgba(255,107,129,0.08)',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        width: 42,\r\n                        height: 42\r\n                      }}\r\n                    >\r\n                      <SchoolIcon sx={{ fontSize: 24, color: '#FF6B81' }} />\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography \r\n                        variant=\"subtitle1\" \r\n                        sx={{ \r\n                          fontFamily: '\"Merriweather\", serif',\r\n                          fontWeight: 600,\r\n                          fontSize: '1rem'\r\n                        }}\r\n                      >\r\n                        Student\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ lineHeight: 1.4, fontSize: '0.85rem' }}>\r\n                        Access course info, campus resources, ClarkYou help, and more\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Paper>\r\n                \r\n                <Paper\r\n                  elevation={2}\r\n                  sx={{\r\n                    p: 1.5,\r\n                    cursor: 'pointer',\r\n                    transition: 'all 0.3s',\r\n                    border: '1px solid #eaeaea',\r\n                    borderRadius: '12px',\r\n                    background: 'linear-gradient(145deg, #ffffff, #f9f9f9)',\r\n                    '&:hover': { \r\n                      transform: 'translateY(-3px)', \r\n                      boxShadow: '0 5px 12px rgba(255,107,129,0.15)',\r\n                      borderColor: '#FF6B81',\r\n                      background: 'linear-gradient(145deg, #ffffff, #fff8f8)'\r\n                    },\r\n                  }}\r\n                  onClick={() => handleUserSelect('faculty')}\r\n                >\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Box \r\n                      sx={{ \r\n                        mr: 2, \r\n                        p: 1, \r\n                        borderRadius: '50%',\r\n                        bgcolor: 'rgba(255,107,129,0.08)',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        width: 42,\r\n                        height: 42\r\n                      }}\r\n                    >\r\n                      <WorkIcon sx={{ fontSize: 24, color: '#FF6B81' }} />\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography \r\n                        variant=\"subtitle1\" \r\n                        sx={{ \r\n                          fontFamily: '\"Merriweather\", serif',\r\n                          fontWeight: 600,\r\n                          fontSize: '1rem'\r\n                        }}\r\n                      >\r\n                        Faculty\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ lineHeight: 1.4, fontSize: '0.85rem' }}>\r\n                        Campus resources, course schedules, and general support\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Paper>\r\n                \r\n                <Paper\r\n                  elevation={2}\r\n                  sx={{\r\n                    p: 1.5,\r\n                    cursor: 'pointer',\r\n                    transition: 'all 0.3s',\r\n                    border: '1px solid #eaeaea',\r\n                    borderRadius: '12px',\r\n                    background: 'linear-gradient(145deg, #ffffff, #f9f9f9)',\r\n                    '&:hover': { \r\n                      transform: 'translateY(-3px)', \r\n                      boxShadow: '0 5px 12px rgba(255,107,129,0.15)',\r\n                      borderColor: '#FF6B81',\r\n                      background: 'linear-gradient(145deg, #ffffff, #fff8f8)'\r\n                    },\r\n                  }}\r\n                  onClick={() => handleUserSelect('other')}\r\n                >\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Box \r\n                      sx={{ \r\n                        mr: 2, \r\n                        p: 1, \r\n                        borderRadius: '50%',\r\n                        bgcolor: 'rgba(255,107,129,0.08)',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        width: 42,\r\n                        height: 42\r\n                      }}\r\n                    >\r\n                      <PersonIcon sx={{ fontSize: 24, color: '#FF6B81' }} />\r\n                    </Box>\r\n                    <Box>\r\n                      <Typography \r\n                        variant=\"subtitle1\" \r\n                        sx={{ \r\n                          fontFamily: '\"Merriweather\", serif',\r\n                          fontWeight: 600,\r\n                          fontSize: '1rem'\r\n                        }}\r\n                      >\r\n                        Other\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ lineHeight: 1.4, fontSize: '0.85rem' }}>\r\n                        Transportation, places near Clark, and general information\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Paper>\r\n              </Box>\r\n              \r\n              <Typography \r\n                variant=\"caption\" \r\n                sx={{ \r\n                  display: 'block', \r\n                  textAlign: 'center', \r\n                  mt: 5,\r\n                  color: 'rgba(0,0,0,0.5)',\r\n                  fontStyle: 'italic'\r\n                }}\r\n              >\r\n                Â© 2025 Clark University Hackathon Project\r\n              </Typography>\r\n            </Box>\r\n          ) : (\r\n            <>\r\n              {/* Chat Messages */}\r\n              <Box sx={{ p: 2, overflow: 'auto', flexGrow: 1 }}>\r\n                {connectionError && (\r\n                  <Box \r\n                    sx={{ \r\n                      p: 2, \r\n                      mb: 2, \r\n                      bgcolor: '#fff0f0', \r\n                      borderRadius: 2,\r\n                      border: '1px solid #ffcdd2' \r\n                    }}\r\n                  >\r\n                    <Typography variant=\"body2\" color=\"error\">\r\n                      {connectionError}\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n                \r\n                {messages.map((message, index) => (\r\n                  <Box\r\n                    key={message.id}\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: message.sender === 'user' ? 'flex-end' : 'flex-start',\r\n                      mb: 2,\r\n                      animation: 'messageAppear 0.3s ease-out',\r\n                      '@keyframes messageAppear': {\r\n                        '0%': { \r\n                          opacity: 0,\r\n                          transform: message.sender === 'user' ? 'translateX(20px)' : 'translateX(-20px)'\r\n                        },\r\n                        '100%': {\r\n                          opacity: 1,\r\n                          transform: 'translateX(0)'\r\n                        }\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Paper\r\n                      elevation={1}\r\n                      sx={{\r\n                        p: 1.5,\r\n                        maxWidth: '80%',\r\n                        borderRadius: message.sender === 'user' ? '18px 18px 4px 18px' : '18px 18px 18px 4px',\r\n                        bgcolor: message.sender === 'user' ? '#FF6B81' : '#f5f5f5',\r\n                        color: message.sender === 'user' ? 'white' : 'inherit',\r\n                        fontFamily: message.sender === 'ai' ? '\"Merriweather\", serif' : 'inherit',\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body2\" \r\n                        sx={{ \r\n                          fontFamily: message.sender === 'ai' ? '\"Merriweather\", serif' : 'inherit',\r\n                          lineHeight: 1.5\r\n                        }}\r\n                      >\r\n                        {message.text}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color={message.sender === 'user' ? 'rgba(255,255,255,0.7)' : 'text.secondary'} sx={{ display: 'block', mt: 0.5 }}>\r\n                        {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                      </Typography>\r\n                    </Paper>\r\n                  </Box>\r\n                ))}\r\n                <div ref={chatBottomRef} />\r\n                \r\n                {/* Loading indicator */}\r\n                {isLoading && (\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'flex-start',\r\n                      alignItems: 'center',\r\n                      mb: 2,\r\n                      pl: 2\r\n                    }}\r\n                  >\r\n                    <Paper\r\n                      elevation={1}\r\n                      sx={{\r\n                        p: 2,\r\n                        maxWidth: '80%',\r\n                        borderRadius: '18px 18px 18px 4px',\r\n                        bgcolor: '#f5f5f5',\r\n                      }}\r\n                    >\r\n                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                        <CircularProgress size={16} sx={{ color: '#FF6B81' }} />\r\n                        <Typography \r\n                          variant=\"body2\"\r\n                          sx={{ \r\n                            fontFamily: '\"Merriweather\", serif',\r\n                            color: '#666'\r\n                          }}\r\n                        >\r\n                          Thinking...\r\n                        </Typography>\r\n                      </Box>\r\n                    </Paper>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n              \r\n              {/* Campus Heatmap - shown conditionally */}\r\n              {showHeatmap && heatmapData.length > 0 && (\r\n                <CampusHeatmap \r\n                  data={heatmapData}\r\n                  onLocationClick={(locationId) => {\r\n                    const location = heatmapData.find(d => d.locationId === locationId);\r\n                    if (location) {\r\n                      setInput(`Tell me more about ${location.name}`);\r\n                    }\r\n                  }}\r\n                  onClose={() => setShowHeatmap(false)}\r\n                />\r\n              )}\r\n\r\n              {/* Input Area */}\r\n              <Box sx={{ p: 2, borderTop: 1, borderColor: 'divider' }}>\r\n                <Box sx={{ display: 'flex', mb: 1 }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onKeyPress={handleKeyPress}\r\n                    variant=\"outlined\"\r\n                    sx={{ mr: 1 }}\r\n                  />\r\n                  <IconButton\r\n                    color=\"primary\"\r\n                    onClick={handleSendMessage}\r\n                    disabled={!input.trim()}\r\n                    sx={{ bgcolor: '#FF6B81', color: 'white', '&:hover': { bgcolor: '#FF4757' }, '&.Mui-disabled': { bgcolor: '#e0e0e0', color: '#9e9e9e' } }}\r\n                  >\r\n                    <SendIcon />\r\n                  </IconButton>\r\n                </Box>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                  <Chip\r\n                    label=\"Library hours\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => handleChipClick('What are the library hours?')}\r\n                    clickable\r\n                  />\r\n                  <Chip\r\n                    label=\"OneCard\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => handleChipClick('I need help with my OneCard')}\r\n                    clickable\r\n                  />\r\n                  <Chip\r\n                    label=\"Courses\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    onClick={() => handleChipClick('What is my course schedule?')}\r\n                    clickable\r\n                  />\r\n                  <Chip\r\n                    label=\"Campus activity\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      // Show the heatmap with time-adjusted data if it's not already showing\r\n                      if (!showHeatmap) {\r\n                        const timeAdjustedData = getTimeAdjustedOccupancyData();\r\n                        setHeatmapData(timeAdjustedData);\r\n                        setShowHeatmap(true);\r\n                        \r\n                        // Add ambient insight message based on current data\r\n                        const diningHall = timeAdjustedData.find(d => d.locationId === 'university-center-dining');\r\n                        const scienceCafe = timeAdjustedData.find(d => d.locationId === 'science-building-cafe');\r\n                        \r\n                        // Find busiest and quietest locations\r\n                        const sortedByOccupancy = [...timeAdjustedData].sort((a, b) => b.occupancy - a.occupancy);\r\n                        const busiest = sortedByOccupancy[0];\r\n                        const quietest = sortedByOccupancy[sortedByOccupancy.length - 1];\r\n                        \r\n                        // Create message with actual occupancy percentages\r\n                        let insightMessage = \"Here's the current campus activity heatmap. \";\r\n                        \r\n                        if (busiest.occupancy > 0.7) {\r\n                          insightMessage += `${busiest.name} is quite busy right now (${Math.round(busiest.occupancy * 100)}% capacity)`;\r\n                          \r\n                          if (quietest.occupancy < 0.5) {\r\n                            insightMessage += `, while ${quietest.name} is a good option if you're looking for a quieter spot (${Math.round(quietest.occupancy * 100)}% capacity).`;\r\n                          } else {\r\n                            insightMessage += \". All campus locations are fairly active at this time.\";\r\n                          }\r\n                        } else {\r\n                          insightMessage += \"Campus locations are not very crowded right now - a great time to visit!\";\r\n                        }\r\n                        \r\n                        setMessages(prev => [...prev, {\r\n                          id: Date.now(),\r\n                          text: insightMessage,\r\n                          sender: 'ai',\r\n                          timestamp: new Date()\r\n                        }]);\r\n                      } else {\r\n                        // If already showing, just ask for quiet spots\r\n                        handleChipClick('Where can I find a quiet place to study right now?');\r\n                      }\r\n                    }}\r\n                    clickable\r\n                  />\r\n                </Box>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Paper>\r\n      )}\r\n\r\n      {/* Side Drawer for options (when in chat mode) */}\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={drawerOpen}\r\n        onClose={() => setDrawerOpen(false)}\r\n      >\r\n        <Box sx={{ width: 250, p: 2 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {user?.type === 'student' ? 'Student' : user?.type === 'faculty' ? 'Faculty' : 'Other'} Options\r\n          </Typography>\r\n          <Divider sx={{ my: 1 }} />\r\n          <List>\r\n            <ListItem button onClick={() => {\r\n              resetChat();\r\n              setDrawerOpen(false);\r\n            }}>\r\n              <Typography>Change User Type</Typography>\r\n            </ListItem>\r\n            <ListItem button onClick={() => {\r\n              // Clear all messages\r\n              setMessages([]);\r\n              \r\n              // Force generation of a new session ID to clear any ongoing conversations\r\n              localStorage.removeItem('sessionId');\r\n              \r\n              // Disconnect and reconnect to clear any ongoing operations on the server side\r\n              socketService.disconnect();\r\n              console.log('Chat reset: starting new chat with fresh session');\r\n              \r\n              // Show welcome message\r\n              setMessages([{ \r\n                id: Date.now(), \r\n                text: getWelcomeMessage(user?.type || 'student'), \r\n                sender: 'ai', \r\n                timestamp: new Date() \r\n              }]);\r\n              \r\n              setDrawerOpen(false);\r\n              \r\n              // Reconnect with the same user type\r\n              if (user?.type) {\r\n                setIsLoading(true);\r\n                socketService.connect(user.type)\r\n                  .then(() => setIsLoading(false))\r\n                  .catch(error => {\r\n                    console.error('Error reconnecting:', error);\r\n                    setConnectionError('Could not reconnect. Please refresh the page.');\r\n                    setIsLoading(false);\r\n                  });\r\n              }\r\n            }}>\r\n              <Typography>Start New Chat</Typography>\r\n            </ListItem>\r\n          </List>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}